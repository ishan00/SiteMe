Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> main
Rule 1     main -> head body
Rule 2     head -> head keyword
Rule 3     head -> head NEWLINE
Rule 4     head -> <empty>
Rule 5     body -> body style
Rule 6     body -> body REST
Rule 7     body -> body newline
Rule 8     body -> body pre
Rule 9     body -> body fakekeyword
Rule 10    body -> <empty>
Rule 11    pre -> PRE
Rule 12    pre -> <empty>
Rule 13    style -> STYLE
Rule 14    newline -> NEWLINE
Rule 15    keyword -> KEYWORD
Rule 16    fakekeyword -> KEYWORD

Terminals, with rules where they appear

KEYWORD              : 15 16
NEWLINE              : 3 14
PRE                  : 11
REST                 : 6
STYLE                : 13
error                : 

Nonterminals, with rules where they appear

body                 : 1 5 6 7 8 9
fakekeyword          : 9
head                 : 1 2 3
keyword              : 2
main                 : 0
newline              : 7
pre                  : 8
style                : 5

Parsing method: LALR

state 0

    (0) S' -> . main
    (1) main -> . head body
    (2) head -> . head keyword
    (3) head -> . head NEWLINE
    (4) head -> .

    NEWLINE         reduce using rule 4 (head -> .)
    KEYWORD         reduce using rule 4 (head -> .)
    REST            reduce using rule 4 (head -> .)
    STYLE           reduce using rule 4 (head -> .)
    PRE             reduce using rule 4 (head -> .)
    $end            reduce using rule 4 (head -> .)

    main                           shift and go to state 1
    head                           shift and go to state 2

state 1

    (0) S' -> main .



state 2

    (1) main -> head . body
    (2) head -> head . keyword
    (3) head -> head . NEWLINE
    (5) body -> . body style
    (6) body -> . body REST
    (7) body -> . body newline
    (8) body -> . body pre
    (9) body -> . body fakekeyword
    (10) body -> .
    (15) keyword -> . KEYWORD

  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for KEYWORD resolved as shift
    NEWLINE         shift and go to state 6
    REST            reduce using rule 10 (body -> .)
    STYLE           reduce using rule 10 (body -> .)
    PRE             reduce using rule 10 (body -> .)
    $end            reduce using rule 10 (body -> .)
    KEYWORD         shift and go to state 3

  ! NEWLINE         [ reduce using rule 10 (body -> .) ]
  ! KEYWORD         [ reduce using rule 10 (body -> .) ]

    body                           shift and go to state 5
    keyword                        shift and go to state 4

state 3

    (15) keyword -> KEYWORD .

    NEWLINE         reduce using rule 15 (keyword -> KEYWORD .)
    KEYWORD         reduce using rule 15 (keyword -> KEYWORD .)
    REST            reduce using rule 15 (keyword -> KEYWORD .)
    STYLE           reduce using rule 15 (keyword -> KEYWORD .)
    PRE             reduce using rule 15 (keyword -> KEYWORD .)
    $end            reduce using rule 15 (keyword -> KEYWORD .)


state 4

    (2) head -> head keyword .

    NEWLINE         reduce using rule 2 (head -> head keyword .)
    KEYWORD         reduce using rule 2 (head -> head keyword .)
    REST            reduce using rule 2 (head -> head keyword .)
    STYLE           reduce using rule 2 (head -> head keyword .)
    PRE             reduce using rule 2 (head -> head keyword .)
    $end            reduce using rule 2 (head -> head keyword .)


state 5

    (1) main -> head body .
    (5) body -> body . style
    (6) body -> body . REST
    (7) body -> body . newline
    (8) body -> body . pre
    (9) body -> body . fakekeyword
    (13) style -> . STYLE
    (14) newline -> . NEWLINE
    (11) pre -> . PRE
    (12) pre -> .
    (16) fakekeyword -> . KEYWORD

  ! shift/reduce conflict for REST resolved as shift
  ! shift/reduce conflict for STYLE resolved as shift
  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for PRE resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 1 (main -> head body .)
  ! shift/reduce conflict for KEYWORD resolved as shift
    $end            reduce using rule 1 (main -> head body .)
    REST            shift and go to state 9
    STYLE           shift and go to state 13
    NEWLINE         shift and go to state 11
    PRE             shift and go to state 7
    KEYWORD         shift and go to state 8

  ! REST            [ reduce using rule 12 (pre -> .) ]
  ! STYLE           [ reduce using rule 12 (pre -> .) ]
  ! NEWLINE         [ reduce using rule 12 (pre -> .) ]
  ! PRE             [ reduce using rule 12 (pre -> .) ]
  ! KEYWORD         [ reduce using rule 12 (pre -> .) ]
  ! $end            [ reduce using rule 12 (pre -> .) ]

    style                          shift and go to state 10
    pre                            shift and go to state 12
    newline                        shift and go to state 14
    fakekeyword                    shift and go to state 15

state 6

    (3) head -> head NEWLINE .

    NEWLINE         reduce using rule 3 (head -> head NEWLINE .)
    KEYWORD         reduce using rule 3 (head -> head NEWLINE .)
    REST            reduce using rule 3 (head -> head NEWLINE .)
    STYLE           reduce using rule 3 (head -> head NEWLINE .)
    PRE             reduce using rule 3 (head -> head NEWLINE .)
    $end            reduce using rule 3 (head -> head NEWLINE .)


state 7

    (11) pre -> PRE .

    REST            reduce using rule 11 (pre -> PRE .)
    STYLE           reduce using rule 11 (pre -> PRE .)
    NEWLINE         reduce using rule 11 (pre -> PRE .)
    PRE             reduce using rule 11 (pre -> PRE .)
    KEYWORD         reduce using rule 11 (pre -> PRE .)
    $end            reduce using rule 11 (pre -> PRE .)


state 8

    (16) fakekeyword -> KEYWORD .

    REST            reduce using rule 16 (fakekeyword -> KEYWORD .)
    STYLE           reduce using rule 16 (fakekeyword -> KEYWORD .)
    NEWLINE         reduce using rule 16 (fakekeyword -> KEYWORD .)
    PRE             reduce using rule 16 (fakekeyword -> KEYWORD .)
    KEYWORD         reduce using rule 16 (fakekeyword -> KEYWORD .)
    $end            reduce using rule 16 (fakekeyword -> KEYWORD .)


state 9

    (6) body -> body REST .

    REST            reduce using rule 6 (body -> body REST .)
    STYLE           reduce using rule 6 (body -> body REST .)
    NEWLINE         reduce using rule 6 (body -> body REST .)
    PRE             reduce using rule 6 (body -> body REST .)
    KEYWORD         reduce using rule 6 (body -> body REST .)
    $end            reduce using rule 6 (body -> body REST .)


state 10

    (5) body -> body style .

    REST            reduce using rule 5 (body -> body style .)
    STYLE           reduce using rule 5 (body -> body style .)
    NEWLINE         reduce using rule 5 (body -> body style .)
    PRE             reduce using rule 5 (body -> body style .)
    KEYWORD         reduce using rule 5 (body -> body style .)
    $end            reduce using rule 5 (body -> body style .)


state 11

    (14) newline -> NEWLINE .

    REST            reduce using rule 14 (newline -> NEWLINE .)
    STYLE           reduce using rule 14 (newline -> NEWLINE .)
    NEWLINE         reduce using rule 14 (newline -> NEWLINE .)
    PRE             reduce using rule 14 (newline -> NEWLINE .)
    KEYWORD         reduce using rule 14 (newline -> NEWLINE .)
    $end            reduce using rule 14 (newline -> NEWLINE .)


state 12

    (8) body -> body pre .

    REST            reduce using rule 8 (body -> body pre .)
    STYLE           reduce using rule 8 (body -> body pre .)
    NEWLINE         reduce using rule 8 (body -> body pre .)
    PRE             reduce using rule 8 (body -> body pre .)
    KEYWORD         reduce using rule 8 (body -> body pre .)
    $end            reduce using rule 8 (body -> body pre .)


state 13

    (13) style -> STYLE .

    REST            reduce using rule 13 (style -> STYLE .)
    STYLE           reduce using rule 13 (style -> STYLE .)
    NEWLINE         reduce using rule 13 (style -> STYLE .)
    PRE             reduce using rule 13 (style -> STYLE .)
    KEYWORD         reduce using rule 13 (style -> STYLE .)
    $end            reduce using rule 13 (style -> STYLE .)


state 14

    (7) body -> body newline .

    REST            reduce using rule 7 (body -> body newline .)
    STYLE           reduce using rule 7 (body -> body newline .)
    NEWLINE         reduce using rule 7 (body -> body newline .)
    PRE             reduce using rule 7 (body -> body newline .)
    KEYWORD         reduce using rule 7 (body -> body newline .)
    $end            reduce using rule 7 (body -> body newline .)


state 15

    (9) body -> body fakekeyword .

    REST            reduce using rule 9 (body -> body fakekeyword .)
    STYLE           reduce using rule 9 (body -> body fakekeyword .)
    NEWLINE         reduce using rule 9 (body -> body fakekeyword .)
    PRE             reduce using rule 9 (body -> body fakekeyword .)
    KEYWORD         reduce using rule 9 (body -> body fakekeyword .)
    $end            reduce using rule 9 (body -> body fakekeyword .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NEWLINE in state 2 resolved as shift
WARNING: shift/reduce conflict for KEYWORD in state 2 resolved as shift
WARNING: shift/reduce conflict for REST in state 5 resolved as shift
WARNING: shift/reduce conflict for STYLE in state 5 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 5 resolved as shift
WARNING: shift/reduce conflict for PRE in state 5 resolved as shift
WARNING: shift/reduce conflict for KEYWORD in state 5 resolved as shift
WARNING: reduce/reduce conflict in state 5 resolved using rule (main -> head body)
WARNING: rejected rule (pre -> <empty>) in state 5
WARNING: Rule (pre -> <empty>) is never reduced
